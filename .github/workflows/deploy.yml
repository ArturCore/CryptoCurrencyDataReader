name: Deploy worker to Azure Web App (manual)

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'Branch / tag / SHA to deploy'
        required: false
        default: 'master'
      slot:
        description: 'Deployment slot'
        type: choice
        options: [production, staging]
        default: production

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.slot }}
    concurrency:
      group: webapp-${{ inputs.slot }}
      cancel-in-progress: true

    env:
      PROJECT: src/BinanceWebSocketReader/BinanceWebSocketReader.csproj
      ASSEMBLY: BinanceWebSocketReader.dll
      JOB_NAME: binance-worker

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Publish worker
        run: |
          set -e
          dotnet publish "$PROJECT" -c Release -o out --framework net9.0
      
          mkdir -p pkg/App_Data/jobs/continuous/$JOB_NAME
          cp -r out/* pkg/App_Data/jobs/continuous/$JOB_NAME/
          echo 'OK' > pkg/index.html
      
          cat > pkg/App_Data/jobs/continuous/$JOB_NAME/run.sh << 'EOF'
          #!/bin/sh
          set -e
          cd "$(dirname "$0")"
          exec dotnet BinanceWebSocketReader.dll
          EOF
          chmod +x pkg/App_Data/jobs/continuous/$JOB_NAME/run.sh
          sed -i 's/\r$//' pkg/App_Data/jobs/continuous/$JOB_NAME/run.sh
      
          echo "==== PKG TREE (before zip) ===="
          find pkg -maxdepth 5 -type f -printf "%s %p\n" | sort -n | tail -n 40
      
          cd pkg && zip -r ../deploy.zip . && cd ..
      
      - name: Inspect ZIP (sizes)
        run: unzip -l deploy.zip | tail -n 60

      - name: Deploy ZIP as WebJob
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          slot-name: ${{ inputs.slot }}
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
          package: ./deploy.zip

      - name: Upload deploy.zip (debug)
        uses: actions/upload-artifact@v4
        with:
          name: deploy-zip
          path: ./deploy.zip

